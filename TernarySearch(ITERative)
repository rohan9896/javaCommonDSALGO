public class Main
{
    // conditions----
    // 1. array should be sorted
    // 2. 1st point
    // 3. 2nd point ;-D yes only one condition LOL
    
    
    /* Algorithm--- similiar to binarySearch but here we divide into three parts
    1. find 2 mid indexes
    2. find whre the e lies and ignore the rest two
    3. DIVIDE, IGNORE, REPEAT until it reaches base case
    */
    
    static int binarySearch(int[] arr,int e,int low,int high){
        
        
        while(low<=high){
            
            // 1. Find 2 mid points    
            int mid1 = low + (high-low)/3; //it'll prevent Integer overflow
            int mid2 = high - (high-low)/3;
            
            if(arr[mid1]==e){
                return mid1;
            }
            else if(arr[mid2]==e){
                return mid2;
            }
            else if(arr[mid1]<e && arr[mid2]>e){
                low = mid1+1;
                high = mid2-1;
            }
            else if(arr[mid1]>e){
                high = mid1-1;
            }
            else if(arr[mid2]<e){
                low = mid2+1;
            }
            
        }
        
        return -1;
    }
    
    
	public static void main(String[] args) {
		int[] arr = {1,3,5,7,9,12};
		System.out.println(binarySearch(arr,9,0,arr.length-1));
	}
}
