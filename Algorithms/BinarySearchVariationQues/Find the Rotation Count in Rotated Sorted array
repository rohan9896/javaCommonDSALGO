// Problem Statement - https://www.geeksforgeeks.org/find-rotation-count-rotated-sorted-array/ 

import java.util.*;
import java.io.*;

public class Main
{
    
    private static int noOfTimesArrIsRotated(int[] arr,int low,int high){
        int n = arr.length;
        int minIdx = -1;
        while(low<=high){
            int mid = low+(high-low)/2;
            int next = (mid+1)%n;
            int prev = (mid-1+n)%n;
            if(arr[mid]<=arr[prev] && arr[mid]<=arr[next]){
                minIdx = mid;
                return n-minIdx;
            }
            else if(arr[low]<=arr[mid]){
                low = mid+1;
            }
            else if(arr[mid]<=arr[high]){
                high = mid-1;
            }
        }
        
        return 0;
    }
    
    
	public static void main(String[] args) {
	    int[] arr = {1,2,3,4,5,6,7,8,9,10};
		System.out.println(noOfTimesArrIsRotated(arr,0,arr.length-1));
	}
}
